{
    "contents" : "###################################################\n### Loading the Data into R\n###################################################\nlibrary(DMwR)\nhead(algae)\n\n\nalgae <- read.table('Analysis.txt',\n          header=F,\n          dec='.',\n          col.names=c('season','size','speed','mxPH','mnO2','Cl',\n          'NO3','NH4','oPO4','PO4','Chla','a1','a2','a3','a4',\n          'a5','a6','a7'),\n          na.strings=c('XXXXXXX'))\n\n\n###################################################\n### Data Visualization and Summarization\n###################################################\nsummary(algae)\n\nhist(algae$mxPH, prob=T)\n\n\nlibrary(car)\npar(mfrow=c(1,2))\nhist(algae$mxPH, prob=T, xlab='',\n      main='Histogram of maximum pH value',ylim=0:1)\nlines(density(algae$mxPH,na.rm=T))\nrug(jitter(algae$mxPH))\nqq.plot(algae$mxPH,main='Normal QQ plot of maximum pH')\npar(mfrow=c(1,1))\n\n\n\n\nboxplot(algae$oPO4,ylab='Orthophosphate (oPO4)')\nrug(jitter(algae$oPO4),side=2)\nabline(h=mean(algae$oPO4,na.rm=T),lty=2)\n\n\n\n\nplot(algae$NH4,xlab='')\nabline(h=mean(algae$NH4,na.rm=T),lty=1)\nabline(h=mean(algae$NH4,na.rm=T)+sd(algae$NH4,na.rm=T),lty=2)\nabline(h=median(algae$NH4,na.rm=T),lty=3)\nidentify(algae$NH4)\n\n\nplot(algae$NH4,xlab='')\nclicked.lines <- identify(algae$NH4)\nalgae[clicked.lines,]\n\n\nalgae[algae$NH4 > 19000,]\n\n\nlibrary(lattice)\nprint(bwplot(size ~ a1, data=algae,ylab='River Size',xlab='Algal A1'))\n\n\nlibrary(Hmisc)\nprint(bwplot(size ~ a1, data=algae,panel=panel.bpplot, \n        probs=seq(.01,.49,by=.01), datadensity=TRUE,\n        ylab='River Size',xlab='Algal A1'))\n\n\nminO2 <- equal.count(na.omit(algae$mnO2),\n                     number=4,overlap=1/5)\nstripplot(season ~ a3|minO2,\n          data=algae[!is.na(algae$mnO2),])\n\n\n###################################################\n### Unkwnon Values\n###################################################\nlibrary(DMwR)\ndata(algae)\n\n\nalgae[!complete.cases(algae),]\n\n\nnrow(algae[!complete.cases(algae),])\n\n\nalgae <- na.omit(algae)\n\n\nalgae <- algae[-c(62,199),]\n\n\napply(algae,1,function(x) sum(is.na(x)))\n\n\ndata(algae)\nmanyNAs(algae,0.2)\n\n\nalgae <- algae[-manyNAs(algae),]\n\n\nalgae[48,'mxPH'] <- mean(algae$mxPH,na.rm=T)\n\n\n\nalgae[is.na(algae$Chla),'Chla'] <- median(algae$Chla,na.rm=T)\n\n\ndata(algae)\nalgae <- algae[-manyNAs(algae),]\nalgae <- centralImputation(algae)\n\n\ncor(algae[,4:18],use=\"complete.obs\")\n\n\ndata(algae)\nalgae <- algae[-manyNAs(algae),]\nlm(PO4 ~ oPO4,data=algae)\n\n\nalgae[28,'PO4'] <- 42.897 + 1.293 * algae[28,'oPO4']\n\n\ndata(algae)\nalgae <- algae[-manyNAs(algae),]\nfillPO4 <- function(oP) {\n   if (is.na(oP)) return(NA)\n   else return(42.897 + 1.293 * oP)\n}\nalgae[is.na(algae$PO4),'PO4'] <- \n    sapply(algae[is.na(algae$PO4),'oPO4'],fillPO4)\n\n\nhistogram(~ mxPH | season,data=algae)\n\n\nalgae$season <- factor(algae$season,levels=c('spring','summer','autumn','winter'))\n\n\nhistogram(~ mxPH | size*speed,data=algae) \n\n\nstripplot(size ~ mxPH | speed, data=algae, jitter=T)\n\n\ndata(algae)\nalgae <- algae[-manyNAs(algae),]\n\n\nalgae <- knnImputation(algae,k=10)\n\n\nalgae <- knnImputation(algae,k=10,meth='median')\n\n\n\n###################################################\n### Multiple Linear Regression\n###################################################\ndata(algae)\nalgae <- algae[-manyNAs(algae), ]\nclean.algae <- knnImputation(algae, k = 10)\n\n\nlm.a1 <- lm(a1 ~ .,data=clean.algae[,1:12])\n\n\nsummary(lm.a1)\n\n\nanova(lm.a1)\n\n\nlm2.a1 <- update(lm.a1, . ~ . - season)\n\n\nsummary(lm2.a1)\n\n\nanova(lm.a1,lm2.a1)\n\n\nfinal.lm <- step(lm.a1)\n\n\nsummary(final.lm)\n\n\n\n###################################################\n### Regression Trees\n###################################################\nlibrary(rpart)\ndata(algae)\nalgae <- algae[-manyNAs(algae), ]\nrt.a1 <- rpart(a1 ~ .,data=algae[,1:12])\n\n\nrt.a1\n\n\nprettyTree(rt.a1)\n\n\nprintcp(rt.a1)\n\n\nrt2.a1 <- prune(rt.a1,cp=0.08)\nrt2.a1\n\n\nset.seed(1234) # Just to ensure  same results as in the book\n(rt.a1 <- rpartXse(a1 ~ .,data=algae[,1:12]))\n\n\nfirst.tree <- rpart(a1 ~ .,data=algae[,1:12])\nsnip.rpart(first.tree,c(4,7))\n\n\n\nprettyTree(first.tree)\nsnip.rpart(first.tree)\n\n\n###################################################\n### Model Evaluation and Selection\n###################################################\nlm.predictions.a1 <- predict(final.lm,clean.algae)\nrt.predictions.a1 <- predict(rt.a1,algae)\n\n\n(mae.a1.lm <- mean(abs(lm.predictions.a1-algae[,'a1'])))\n(mae.a1.rt <- mean(abs(rt.predictions.a1-algae[,'a1'])))\n\n\n(mse.a1.lm <- mean((lm.predictions.a1-algae[,'a1'])^2))\n(mse.a1.rt <- mean((rt.predictions.a1-algae[,'a1'])^2))\n\n\n(nmse.a1.lm <- mean((lm.predictions.a1-algae[,'a1'])^2)/\n                mean((mean(algae[,'a1'])-algae[,'a1'])^2))\n(nmse.a1.rt <- mean((rt.predictions.a1-algae[,'a1'])^2)/\n                mean((mean(algae[,'a1'])-algae[,'a1'])^2))\n\n\nregr.eval(algae[,'a1'],rt.predictions.a1,train.y=algae[,'a1'])\n\n\nold.par <- par(mfrow=c(1,2))\nplot(lm.predictions.a1,algae[,'a1'],main=\"Linear Model\",\n     xlab=\"Predictions\",ylab=\"True Values\")\nabline(0,1,lty=2)\nplot(rt.predictions.a1,algae[,'a1'],main=\"Regression Tree\",\n     xlab=\"Predictions\",ylab=\"True Values\")\nabline(0,1,lty=2)\npar(old.par)\n\n\n\nplot(lm.predictions.a1,algae[,'a1'],main=\"Linear Model\",\n     xlab=\"Predictions\",ylab=\"True Values\")\nabline(0,1,lty=2)\nalgae[identify(lm.predictions.a1,algae[,'a1']),]\n\n\n\nsensible.lm.predictions.a1 <- ifelse(lm.predictions.a1 < 0,0,lm.predictions.a1)\nregr.eval(algae[,'a1'],lm.predictions.a1,stats=c('mae','mse'))\nregr.eval(algae[,'a1'],sensible.lm.predictions.a1,stats=c('mae','mse'))\n\n\ncv.rpart <- function(form,train,test,...) {\n  m <- rpartXse(form,train,...)\n  p <- predict(m,test)\n  mse <- mean((p-resp(form,test))^2)\n  c(nmse=mse/mean((mean(resp(form,train))-resp(form,test))^2))\n}\ncv.lm <- function(form,train,test,...) {\n  m <- lm(form,train,...)\n  p <- predict(m,test)\n  p <- ifelse(p < 0,0,p)\n  mse <- mean((p-resp(form,test))^2)\n  c(nmse=mse/mean((mean(resp(form,train))-resp(form,test))^2))\n}\n\n\nres <- experimentalComparison(\n            c(dataset(a1 ~ .,clean.algae[,1:12],'a1')),\n            c(variants('cv.lm'), \n              variants('cv.rpart',se=c(0,0.5,1))),\n            cvSettings(3,10,1234))\n\n\nsummary(res)\n\n\nplot(res)\n\n\ngetVariant('cv.rpart.v1',res)\n\n\nDSs <- sapply(names(clean.algae)[12:18],\n         function(x,names.attrs) { \n           f <- as.formula(paste(x,\"~ .\"))\n           dataset(f,clean.algae[,c(names.attrs,x)],x) \n         },\n         names(clean.algae)[1:11])\n\nres.all <- experimentalComparison(\n                  DSs,\n                  c(variants('cv.lm'),\n                    variants('cv.rpart',se=c(0,0.5,1))\n                   ),\n                  cvSettings(5,10,1234))\n\n\nplot(res.all)\n\n\nbestScores(res.all)\n\n\nlibrary(randomForest)\ncv.rf <- function(form,train,test,...) {\n  m <- randomForest(form,train,...)\n  p <- predict(m,test)\n  mse <- mean((p-resp(form,test))^2)\n  c(nmse=mse/mean((mean(resp(form,train))-resp(form,test))^2))\n}\nres.all <- experimentalComparison(\n                  DSs,\n                  c(variants('cv.lm'),\n                    variants('cv.rpart',se=c(0,0.5,1)),\n                    variants('cv.rf',ntree=c(200,500,700))\n                   ),\n                  cvSettings(5,10,1234))\n\n\nbestScores(res.all)\n\n\ncompAnalysis(res.all,against='cv.rf.v3',\n               datasets=c('a1','a2','a4','a6'))\n\n\n\n###################################################\n### Predictions for the 7 algae\n###################################################\nbestModelsNames <- sapply(bestScores(res.all),\n                          function(x) x['nmse','system'])\nlearners <- c(rf='randomForest',rpart='rpartXse') \nfuncs <- learners[sapply(strsplit(bestModelsNames,'\\\\.'),\n                        function(x) x[2])]\nparSetts <- lapply(bestModelsNames,\n                   function(x) getVariant(x,res.all)@pars)\n\nbestModels <- list()\nfor(a in 1:7) {\n  form <- as.formula(paste(names(clean.algae)[11+a],'~ .'))\n  bestModels[[a]] <- do.call(funcs[a],\n          c(list(form,clean.algae[,c(1:11,11+a)]),parSetts[[a]]))\n}\n\n\nclean.test.algae <- knnImputation(test.algae,k=10,distData=algae[,1:11])\n\n\npreds <- matrix(ncol=7,nrow=140)\nfor(i in 1:nrow(clean.test.algae)) \n  preds[i,] <- sapply(1:7,\n                      function(x) \n                        predict(bestModels[[x]],clean.test.algae[i,])\n                     )\n\n\navg.preds <- apply(algae[,12:18],2,mean)\napply( ((algae.sols-preds)^2),           2,mean) / \napply( (scale(algae.sols,avg.preds,F)^2),2,mean)\n\n\n",
    "created" : 1419430352116.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3562155502",
    "id" : "ED98DDD1",
    "lastKnownWriteTime" : 1418225823,
    "path" : "~/DataMining/Data-Mining-With-R-master/data mining with R/Chapter2.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}